{"version":3,"file":"static/js/10.83b0fc67.chunk.js","mappings":"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","sources":["helpers/validation.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\nimport 'yup-phone';\n\nexport const registerSchema = Yup.object({\n  name: Yup.string().required('Name is required'),\n  email: Yup.string()\n    .required('Email is required')\n    .email('Please enter a valid email'),\n  password: Yup.string()\n    .required('Password is required')\n    .min(8, 'Password must be 8 characters long')\n    .matches(/[0-9]/, 'Password requires a number')\n    .matches(/[a-z]/, 'Password requires a lowercase letter')\n    .matches(/[A-Z]/, 'Password requires an uppercase letter')\n    .matches(/[^\\w]/, 'Password requires a symbol'),\n  confirm: Yup.string()\n    .required('Password confirm is required')\n    .oneOf([Yup.ref('password'), null], 'Must match \"password\" field value'),\n});\n\nexport const contactsSchema = Yup.object().shape({\n  name: Yup.string()\n    .required()\n    .min(5)\n    .max(24)\n    .matches(\n      \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n      'Please enter correct name'\n    ),\n  number: Yup.string().phone('UA').required('A phone number is required'),\n});\n\nexport const loginSchema = Yup.object({\n  email: Yup.string()\n    .required('Email is required')\n    .email('Please enter a valid email'),\n  password: Yup.string()\n    .required('Password is required')\n    .min(8, 'Password must be 8 characters long')\n    .matches(/[0-9]/, 'Password requires a number')\n    .matches(/[a-z]/, 'Password requires a lowercase letter')\n    .matches(/[A-Z]/, 'Password requires an uppercase letter')\n    .matches(/[^\\w]/, 'Password requires a symbol'),\n});\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterValue) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filterValue.toLowerCase())\n    );\n  }\n);\n","import styled from '@emotion/styled';\nimport { Field, Form } from 'formik';\n\nexport const FormCont = styled(Form)`\n  display: inline-block;\n  flex-direction: column;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  font-size: 24px;\n  font-weight: 600;\n`;\n\nexport const Text = styled.span`\n  margin-bottom: 5px;\n`;\n\nexport const Input = styled(Field)`\n  display: inline-block;\n  margin: auto;\n  margin-bottom: 5px;\n  width: 300px;\n  padding: 15px;\n  border: none;\n  border-radius: 20px;\n\n  :hover,\n  :focus {\n    outline-color: #5e3e3e;\n  }\n`;\nexport const SubmitButton = styled.button`\n  font-size: 24px;\n  font-weight: 700;\n  background-color: #84adb4;\n  margin-bottom: 40px;\n  border: 2px solid #c29e9e;\n  border-radius: 20px;\n  padding: 10px;\n  cursor: pointer;\n\n  :hover {\n    background-color: #bda6a6;\n    color: white;\n  }\n`;\n\nexport const ErrorText = styled.p`\n  color: red;\n  font-size: 14px;\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { contactsSchema } from 'helpers/validation';\nimport {\n  Input,\n  FormCont,\n  Label,\n  SubmitButton,\n  Text,\n  ErrorText,\n} from './ContactForm.styled';\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const allContacts = useSelector(selectContacts);\n\n  const handleSubmit = (values, { resetForm }) => {\n    if (allContacts.some(item => item.name === values.name)) {\n      toast.error(`${values.name} is already in contacts.`);\n      return;\n    }\n    dispatch(addContact(values));\n\n    resetForm();\n    toast.success('The contact is added to your book');\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={contactsSchema}\n      onSubmit={handleSubmit}\n    >\n      <FormCont autoComplete=\"off\">\n        <Label>\n          <Text>Name</Text>\n          <Input type=\"text\" name=\"name\" placeholder=\"Jack Daniel\" />\n          <FormError name=\"name\" />\n        </Label>\n        <Label>\n          <Text>Phone</Text>\n          <Input type=\"tel\" name=\"number\" placeholder=\"8-000-000-00-00\" />\n          <FormError name=\"number\" />\n        </Label>\n        <SubmitButton type=\"submit\">Add contact</SubmitButton>\n      </FormCont>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: 2px solid brown;\n  border-radius: 10px;\n  padding: 5px;\n  margin-bottom: 5px;\n`;\n\nexport const ContactName = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const ContactNumber = styled.span`\n  font-size: 16px;\n  font-weight: 500;\n  margin-left: 10px;\n`;\n\nexport const DeleteBtn = styled.button`\n  font-size: 14px;\n  font-weight: 600;\n  margin-bottom: 2px;\n  border: none;\n  border-radius: 5px;\n  padding: 5px;\n  cursor: pointer;\n\n  :hover {\n    background-color: #bda6a6;\n    color: white;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { deleteContact, editContact } from 'redux/contacts/operations';\nimport {\n  Item,\n  ContactName,\n  ContactNumber,\n  DeleteBtn,\n} from './ContactItem.styled';\n\nconst ContactItem = ({\n  item: { name: nameValue, number: numberValue, id },\n}) => {\n  const [isEdit, setIsEdit] = useState(false);\n  const [name, setName] = useState(nameValue);\n  const [number, setNumber] = useState(numberValue);\n  const dispatch = useDispatch();\n\n  const handleDeleteContacts = () => {\n    dispatch(deleteContact(id));\n    toast.success('The contact successfully deleted from your book');\n  };\n\n  const handleEditMode = () => {\n    if (isEdit) {\n      setIsEdit(prev => !prev);\n      dispatch(editContact({ id, name, number }));\n      toast.success('The contact successfully edited')\n      return;\n    }\n    setIsEdit(prev => !prev);\n    // dispatch(editContact(id));\n    // toast.success('The contact was edit success')\n  };\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        return;\n      case 'number':\n        setNumber(e.target.value);\n        return;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <Item>\n      {isEdit ? (\n        <input name=\"name\" onChange={handleChange} type=\"text\" value={name} />\n      ) : (\n        <ContactName>{name}</ContactName>\n      )}\n      :\n      {isEdit ? (\n        <input\n          name=\"number\"\n          onChange={handleChange}\n          type=\"text\"\n          value={number}\n        />\n      ) : (\n        <ContactNumber>{number}</ContactNumber>\n      )}\n      <DeleteBtn type=\"button\" onClick={handleEditMode}>\n        {isEdit ? 'Save' : 'Edit'}{' '}\n      </DeleteBtn>\n      <DeleteBtn type=\"button\" onClick={handleDeleteContacts}>\n        Delete\n      </DeleteBtn>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n\nexport default ContactItem;\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  font-size: 28px;\n  font-weight: 700;\n  color: red;\n`;\n","import ContactItem from 'components/ContactItem';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { Text } from './ContactList.styled';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  if (contacts.length === 0) {\n    return <Text>There are no contacts here</Text>;\n  }\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <li key={contact.id}>\n          <ContactItem item={contact} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 10px;\n  font-size: 24px;\n  font-weight: 400;\n`;\nexport const InputContainer = styled.div`\n  margin-top: 5px;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  margin: 0;\n  margin-bottom: 20px;\n  width: 200px;\n  padding: 10px;\n  border: none;\n  border-radius: 20px;\n\n  :hover,\n  :focus {\n    outline-color: #5e3e3e;\n  }\n`;\n","import { Label, Input, InputContainer } from './Filter.styled';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(selectFilter);\n  return (\n    <Label>\n      Find contacts by name\n      <InputContainer>\n        <Input\n          type=\"text\"\n          value={value}\n          onChange={e => dispatch(setFilter(e.target.value))}\n        />\n      </InputContainer>\n    </Label>\n  );\n};\n\nexport default Filter;\n","import ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\n\nimport styled from '@emotion/styled';\n\nconst Container = styled.div`\n  display: block;\n  text-align: center;\n  margin: 40px auto;\n  max-width: 400px;\n  padding: 30px;\n  border: 2px solid black;\n  border-radius: 30px;\n  background: linear-gradient(to right, #c7c7e6, #9b646c);\n  box-shadow: 8px 8px 20px 12px rgba(41, 38, 38, 0.2);\n`;\n\nconst ContactsPage = () => {\n  return (\n    <Container>\n      <h1>Contacts</h1>\n      <ContactForm />\n      <h1>Contacts</h1>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["registerSchema","Yup","name","required","email","password","min","matches","confirm","oneOf","contactsSchema","shape","max","number","phone","loginSchema","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectFilter","filter","selectFilteredContacts","filterValue","toLowerCase","includes","FormCont","styled","Form","Label","Text","Input","Field","SubmitButton","ErrorText","FormError","render","message","initialValues","dispatch","useDispatch","allContacts","useSelector","validationSchema","onSubmit","values","resetForm","some","item","toast","addContact","autoComplete","type","placeholder","Item","ContactName","ContactNumber","DeleteBtn","nameValue","numberValue","id","useState","isEdit","setIsEdit","setName","setNumber","handleChange","e","target","onChange","onClick","editContact","deleteContact","useEffect","fetchContacts","contact","InputContainer","setFilter","Container"],"sourceRoot":""}